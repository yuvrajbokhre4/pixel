var animTl = gsap.timeline();

function isInViewport(el) {
  const rect = el.getBoundingClientRect();
  return (
    rect.top <
      (window.innerHeight || document.documentElement.clientHeight) * 1.3 &&
    rect.bottom > 0
  );
}

var dwidth = jQuery(window).width();
jQuery(window).bind("resize", function (e) {
  var wwidth = jQuery(window).width();
  dwidth !== wwidth &&
    ((dwidth = jQuery(window).width()),
    window.RT && clearTimeout(window.RT),
    (window.RT = setTimeout(function () {
      this.location.reload(!1);
    }, 1e3)));
});

let menuBtn = document.getElementsByClassName("openButton"),
  sidebar = document.getElementsByClassName("sidebar")[0],
  links = document.querySelectorAll(".sidebar-navlinks>.nav-item>a"),
  animated_wheel = document.getElementsByClassName("animation-wheel")[0],
  open_Button = document.getElementsByClassName("openButton")[0];

gsap.registerPlugin(ScrollTrigger);

let initialCount = 0;

const toggleSidebar = function () {
  if (initialCount === 0) {
    gsap.fromTo(
      ".sidebar-navlinks>.nav-item>a",
      { y: 100 },
      { duration: 0.6, y: 0, stagger: 0.3 }
    );
    gsap.fromTo(
      ".social-media-links>li>a",
      { x: -100 },
      { duration: 0.6, x: 0, stagger: 0.3 }
    );
    sidebar.style.top = "0%";
    document.body.classList.add("no-scroll");
    document.documentElement.classList.add("no-scroll");
    initialCount = 1;
    $('[data-change="Menu"]').html("Close");
  } else {
    sidebar.style.top = "-120%";
    document.body.classList.remove("no-scroll");
    document.documentElement.classList.remove("no-scroll");
    initialCount = 0;
    $('[data-change="Menu"]')
      .html("Menu")
      .animate({ transitionDuration: 1000 });
  }
};

// Add event listener to menu button to toggle sidebar
open_Button.addEventListener("click", toggleSidebar);

if (window.innerWidth > 960) {
  // Optional: Close sidebar if needed when the window width is greater than 960

  let lastScrollTop = 0;
  const threshold = 2.5; // Set the threshold in pixels

  window.addEventListener("scroll", function () {
    let currentScroll =
      window.pageYOffset || document.documentElement.scrollTop;
    // var view = 0;
    // if (isInViewport(document.querySelector(".socialmedia_icon"))) {
    //   var el = document.querySelectorAll("[data-header]");
    //   console.log("View: ", view);
    //   if (view == 0) {
    //     view = 1;
    //   } else {
    //     return;
    //   }
    //   el.forEach((element) => {
    //     if (element.getAttribute("data-header") === "scroll") {
    //       element.setAttribute("data-header", "noscroll");
    //       element.classList.remove("scroll");
    //       element.classList.add("noscroll");
    //     } else {
    //       element.setAttribute("data-header", "scroll");
    //       element.classList.remove("noscroll");
    //       element.classList.add("scroll");
    //     }
    //   });

    //   // console.log(el);
    // } else {
    //   if (view == 1) {
    //     el.forEach((element) => {
    //       if (element.getAttribute("data-header") === "scroll") {
    //         element.setAttribute("data-header", "noscroll");
    //         element.classList.remove("scroll");
    //         element.classList.add("noscroll");
    //       } else {
    //         element.setAttribute("data-header", "scroll");
    //         element.classList.remove("noscroll");
    //         element.classList.add("scroll");
    //       }
    //     });
    //   }
    //   view = 0;
    // }

    // // Check if the scroll has moved beyond the threshold

    // Check if the scroll has moved beyond the threshold
    if (currentScroll > lastScrollTop + threshold) {
      $('[data-header="scroll"]').css("top", "-15%");
    } else if (currentScroll < lastScrollTop - threshold) {
      $('[data-header="scroll"]').css("top", "0");
    }
    // console.log();

    // Update the last scroll position
    lastScrollTop = currentScroll;
  });
}

// ------------------------------------------------------------------------
var formUpText = document.getElementsByClassName("footer-upperline"),
  name,
  email,
  text;
var buttonState = 1; // Variable to track button state

// function showAlert() {
//   myform.reset(),
//     (document.getElementById("alertBox").style.display = "block"),
//     (myform.style.display = "none"),
//     (formUpText[0].style.display = "none");
// }
function closeAlert() {
  (document.getElementById("alertBox").style.display = "none"),
    (myform.style.display = "block"),
    (formUpText[0].style.display = "block");
}
var myform = document.getElementById("my_form");
function validateEmail(email) {
  var re;
  return /\S+@\S+\.\S+/.test(email);
}
function InvalidMsg(textbox) {
  return (
    "" === textbox.value
      ? textbox.setCustomValidity("Entering an email-id is necessary!")
      : textbox.validity.typeMismatch
      ? textbox.setCustomValidity(
          "Please enter an email address which is valid!"
        )
      : textbox.setCustomValidity(""),
    !0
  );
}
function SpillInvalidMsg(textbox) {
  if (textbox.value.length > 250) {
    textbox.setCustomValidity("Response must be under 250 characters.");
  } else {
    textbox.setCustomValidity("");
  }
  // Trigger form validation check
  textbox.reportValidity();
  return true;
}

// Add the event listener to your input element
if (document.querySelector("#textuser")) {
  document.getElementById("textuser").addEventListener("textbox", function () {
    SpillInvalidMsg(this);
  });
}
function handleSubmit(event) {
  event.preventDefault();
  if (buttonState === 1) {
    buttonState = 0; // Set to 0 to disable the button
    document.getElementById("btnSubmit").disabled = true;
  }
}

var v = 1;

function scrollFooter(scrollY, heightFooter) {
  const body = document.body,
    html = document.documentElement,
    bdheight = Math.max(
      body.scrollHeight,
      body.offsetHeight,
      html.clientHeight,
      html.scrollHeight,
      html.offsetHeight
    ),
    n = bdheight - heightFooter - $(window).height();
  if (scrollY >= n) {
    if (scrollY - n >= $(window).height() - 1000) {
      //       if (v == 1) {
      //         var el = document.querySelectorAll("[data-header]");
      //         el.forEach((element) => {
      //           if (element.getAttribute("data-header") === "scroll") {
      //             element.setAttribute("data-header", "noscroll");
      // $('[data-header="noscroll"]').css("top", "0%");

      //           } else {
      //             element.setAttribute("data-header", "scroll");

      //           }
      //         });
      //       }

      $(".footer-text-section").css({ "z-index": "1" });
    } else {
      // var el = document.querySelectorAll("[data-header]");
      // el.forEach((element) => {
      //   if (element.getAttribute("data-header") === "scroll") {
      //     element.setAttribute("data-header", "noscroll");
      //   } else {

      //   }
      // });
      $(".footer-text-section").css({ "z-index": "0" });
    }
    $(".footer-text-section").css({ bottom: "0px" });
  } else {
    $(".footer-text-section").css({ bottom: "-" + heightFooter + "px" });

    // Get all elements with class 'nav-holder'
    // var elements = document.getElementsByClassName("nav-holder");

    // // Loop through each element
    // for (var i = 0; i < elements.length; i++) {
    //   // Check if element has 'data-header="scroll"'
    //   if (elements[i].getAttribute("data-header") === "scroll") {
    //     // Remove 'data-header' attribute
    //     elements[i].removeAttribute("data-header");
    //   }
    // }
  }
}
if (myform) {
  myform.addEventListener("submit", function (e) {
    e.preventDefault();    
    // Track lead event for Facebook Pixel
    fbq('track', 'Lead', {
        name: document.getElementById('nameuser').value,
        email: document.getElementById('gmaiiluser').value,
        message: document.getElementById('textuser').value
    });

    // You can process form data submission here (e.g., send it to your server)
    
    console.log("Form submitted");

    // Optionally, reset the form
    document.getElementById('my_form').reset();



    const nameUser = myform.elements.item(0).value;
    const emailUser = myform.elements.item(1).value;
    const textUser = myform.elements.item(2).value;

    if (validateEmail(emailUser)) {
      const bodytxt =
        "Name: " +
        `<b>${nameUser}</b>` +
        "<br>\n Email: " +
        `<b>${emailUser}</b>` +
        "\n Message: <br>" +
        `<b>${textUser}</b>`;

      Email.send({
        Host: "smtp.elasticemail.com",
        Username: "iminfo@integramagna.com",
        Password: "F63AAC721194CFB801A7F3163DBC96920A2B",
        To: "hi@integramagna.com",
        From: "hi@integramagna.com",
        Subject: "Enquiry - Integra Magna",
        Port: 2525,
        Body: bodytxt,
      }).then((message) => showAlert());
    } else {
      alert("Please enter a valid email address. \n" + emailUser);
    }
  });
}

function validateEmail(email) {
  var re = /\S+@\S+\.\S+/;
  return re.test(email);
}

function showAlert() {
  event.preventDefault();
  document.getElementById("footer-form-pop").style.display = "flex";
  document.getElementById("popform-container").style.display = "flex";
  //lock scroll
  document.body.classList.add("no-scroll");
  document.getElementById("footer-form-pop").classList.add("no-scroll");
  //clear my form after this
  // console.log(myform);
  myform.reset();
  buttonState = 1; // Set to 1 to enable the button
  if (buttonState === 1) {
    document.getElementById("btnSubmit").disabled = false;
  }
  // alert("Your message has been sent successfully!");
}

var windowHeight = window.innerHeight,
  footerHeight = $(".footer-text-section").innerHeight(),
  sectionheight = $(".form-container-section").innerHeight() + footerHeight;
function scrollToTop() {
  const currentPosition = window.pageYOffset;
  const distanceToTop = -currentPosition;
  const totalSteps = 150; // Increased steps for smoother scrolling
  let step = 0;

  const scrollInterval = setInterval(function () {
    if (step >= totalSteps || window.pageYOffset <= 0) {
      clearInterval(scrollInterval);
      window.scrollTo(0, 0);
    } else {
      const easeInOut = 0.5 * (1 - Math.cos((Math.PI * step) / totalSteps));
      const scrollStep = easeInOut * distanceToTop;
      window.scrollTo(0, currentPosition + scrollStep);
      step++;
    }
  }, 16); // 16 ms for a smoother 60fps animation
}

$("#scroll-animate, #scroll-animate-main").css({
  height: sectionheight + "px",
}),
  scrollFooter(window.scrollY, footerHeight),
  (window.onscroll = function () {
    var scroll = window.scrollY;
    $("#scroll-animate-main").css({ top: "-" + scroll + "px" }),
      scrollFooter(scroll, footerHeight);
  });

// FOR HEADING TEXT TRANSITION----------------------------------------
function headerTextTransition() {
  var headTrans = document.querySelectorAll(".headTrans");
  headTrans.forEach((headTran, index) => {
    const workhead2 = new SplitType(headTran, {
      types: "words,line",
      tagName: "span",
      className: "word",
    });
    var tl = gsap.to(headTran.querySelectorAll(".word"), 0.3, {
      y: -0.1,
      opacity: 1,
      // stagger: 0.05,
      visibility: "visible",
      ease: "power1.out",
    });
    animTl.add(tl, "<0.5");
  });
}
//--------------------------------------------------------------------

// IN VIEWPORT ANIMATION----------------------------------------------
function TransitionInViewport() {
  var initialTransition = document.querySelectorAll(".initialTransition");

  function checkVisibility() {
    var tlviewport = gsap.timeline();
    initialTransition.forEach((element, index) => {
      if (!element.getAttribute("data-mobile-off") && window.innerWidth > 960) {
        if (isInViewport(element) && !element.classList.contains("animated")) {
          const workhead2 = new SplitType(element, {
            types: "words,line",
            tagName: "span",
            className: "word",
          });
          var tl = gsap.to(element.querySelectorAll(".word"), 1.3, {
            x: 0,
            y: 0,
            opacity: 1,
            stagger: 0.02,
            visibility: "visible",
            ease: "power2.out",
          });
          element.classList.add("animated"); // Ensure animation only happens once
          tlviewport.add(tl, "<");
        }
      }
    });
  }
  // Initial check
  checkVisibility();
  // Add scroll event listener to check visibility on scroll
  window.addEventListener("scroll", checkVisibility);
}
//--------------------------------------------------------------------

function landingHeroTextTransition() {
  // var landingHeroText = document.querySelector("data-float=font-float");
  var landingHeroText = document.querySelectorAll('[data-float="font-float"]');
  if (landingHeroText) {
    landingHeroText.forEach((element, index) => {
      const workhead2 = new SplitType(element, {
        types: "char,words",
        tagName: "span",
        className: "word",
      });
      var tl = gsap.to(element.querySelectorAll(".word"), 0.5, {
        y: -0.1,
        opacity: 1,
        stagger: 0.1,
        visibility: "visible",
        ease: "power1.out",
      });
      animTl.add(tl, "<0.5");
    });
  }
}

// FOR IMAGES---------------------------------------------------------

document.addEventListener("DOMContentLoaded", function () {
  if (window.innerWidth > 960) {
    const textAnim = document.querySelectorAll(".textAnim");

    function isInViewport(el) {
      const rect = el.getBoundingClientRect();
      return (
        rect.top <
          (window.innerHeight || document.documentElement.clientHeight) * 0.9 &&
        rect.bottom > 0
      );
    }

    function revealImages() {
      textAnim.forEach((textContainer) => {
        const img = textContainer.querySelector(".animTxt");
        if (
          isInViewport(textContainer) &&
          !img.classList.contains("revealed")
        ) {
          gsap.fromTo(
            img,
            {
              opacity: 0,
              // maskImage: "linear-gradient( transparent 0%, black 100%)",
              y: -50,
            },

            {
              opacity: 1,
              y: 0,
              duration: 0.8,
              // maskImage: "linear-gradient( transparent 0%, black 50%)",
              ease: "power2.out",
            }
          );
          img.classList.add("revealed");
        }
      });
    }

    window.addEventListener("scroll", revealImages);
    revealImages(); // Initial check
  }
});

// FOR HEAD IMAGES---------------------------------------------------------

function revealHeadImages() {
  const img = document.querySelectorAll(".animHead");
  img.forEach((imge) => {
    var tl = gsap.fromTo(
      imge,
      {
        opacity: 0,
        // maskImage: "linear-gradient( transparent 0%, black 100%)",
        y: "20%",
      },

      {
        opacity: 1,
        y: 0,
        duration: 1,
        delay: 0.5,
        // maskImage: "linear-gradient( transparent 0%, black 50%)",
        ease: "power2.out",
      }
    );
    imge.classList.add("revealed");
    animTl.add(tl, "0.7");
  });
}

// const loaderText = document.getElementById("loader-text");
// const content = document.getElementById("content");
// const loader = document.getElementById("loader");
// const loadingPercentage = document.querySelector(".loading-percentage");

// // Function to update the width of the loading slider based on load time
// function updateLoaderPercentage(loadTime) {
//   let roundedLoadTime = Math.ceil(loadTime); // Round up to the next integer
//   let startTime = performance.now();

//   function updateLoader() {
//     let currentTime = performance.now();
//     let elapsedTime = currentTime - startTime;
//     let percentage = Math.min(100, (elapsedTime / roundedLoadTime) * 100);

//     loadingPercentage.style.width = percentage + "%";

//     if (percentage < 100) {
//       requestAnimationFrame(updateLoader);
//     }
//   }

//   updateLoader();
// }

// window.onload = function () {
//   var loadTimef =
//     window.performance.timing.domContentLoadedEventEnd -
//     window.performance.timing.navigationStart;

//   updateLoaderPercentage(loadTimef);

//   setTimeout(() => {
//     document.querySelector(".page-loader").classList.add("slide-up");
//     document
//       .querySelector(".page-loader")
//       .addEventListener("transitionend", function () {
//         this.style.display = "none"; // Hides the loader after transition            $("#content").fadeIn("slow");
//       });
//     landingHeroTextTransition();
//     headerTextTransition();
//     TransitionInViewport();
//     revealHeadImages();

//   }, loadTimef + 1000); // Ensures loader remains for at least the actual load time
// };

const loaderText = document.getElementById("loader-text");
const content = document.getElementById("content");
const loader = document.getElementById("loader");
const loadingPercentage = document.querySelector(".loading-percentage");

// Function to update the width of the loading slider based on load time
function updateLoaderPercentage(loadTime) {
  let roundedLoadTime = Math.ceil(loadTime); // Round up to the next integer
  let startTime = performance.now();

  function updateLoader() {
    let currentTime = performance.now();
    let elapsedTime = currentTime - startTime;
    let percentage = Math.min(100, (elapsedTime / roundedLoadTime) * 100);

    loadingPercentage.style.width = percentage + "%";

    if (percentage < 100) {
      requestAnimationFrame(updateLoader);
    }
  }

  updateLoader();
}

function hideLoader() {
  document.querySelector(".page-loader").classList.add("slide-up");
  document
    .querySelector(".page-loader")
    .addEventListener("transitionend", function () {
      this.style.display = "none"; // Hides the loader after transition
      document.body.classList.remove("lock-scroll"); // Re-enable scrolling
      document.documentElement.classList.remove("lock-scroll"); // Re-enable scrolling for HTML
      $("#content").fadeIn("slow");
    });
  landingHeroTextTransition();
  headerTextTransition();
  TransitionInViewport();
  revealHeadImages();
}

window.onload = function () {
  var loadTimef =
    window.performance.timing.domContentLoadedEventEnd -
    window.performance.timing.navigationStart;

  updateLoaderPercentage(loadTimef);

  // Ensure loader ends after 8 seconds
  const maxLoadTime = 8000;

  setTimeout(() => {
    hideLoader();
  }, Math.min(loadTimef + 1000, maxLoadTime)); // Ensures loader remains for at least the actual load time
};

// Lock scroll when the page loads
// document.addEventListener("DOMContentLoaded", function () {
//   document.body.classList.add("lock-scroll"); // Disable scrolling
//   document.documentElement.classList.add("lock-scroll"); // Disable scrolling for HTML
// });

var linksContainers = document.querySelectorAll("[data-links]");
var exitloader = document.getElementById("exit-loader");

linksContainers.forEach((container) => {
  container.addEventListener("click", (event) => {
    // Find the closest anchor tag to the clicked element
    const link = event.target.closest("a");
    if (link) {
      event.preventDefault(); // Prevent the default action of the link
      const href = link.getAttribute("href");

      // Show the loader with animation
      exitloader.classList.add("show");
      // document.body.classList.add("lock-scroll"); // Lock scroll
      // document.documentElement.classList.add("lock-scroll"); // Lock scroll for HTML

      if (container.getAttribute("data-links") != "Integra Magna") {
        document.getElementById("exit-loader-text").innerHTML =
          container.getAttribute("data-links");
      } else {
        document.getElementById(
          "exit-loader-text"
        ).innerHTML = `<svg  width="230px" viewBox="0 0 462 224" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M16.79 9.04999V93H0V9.04999H16.79Z" fill="white"/>
      <path d="M95.19 59.64V93H78.32V60.67C78.32 50.62 73.3 45.34 64.41 45.34C59.77 45.34 54.62 48.05 50.24 53.2V93H33.37V31.56H50.24V36.2C55.26 32.21 61.06 30.02 68.02 30.02C84.38 30.02 95.2 41.61 95.2 59.65L95.19 59.64Z" fill="white"/>
      <path d="M154.4 90.07C148.91 92.19 144.41 92.69 140.04 92.69C124.06 92.69 115.07 82.7 115.07 67.47V45.37H102.34V31.64H115.07V11.04H131.42V31.64H153.27V45.37H131.42V67.47C131.42 74.46 135.79 77.58 141.91 77.58C145.66 77.58 149.15 76.46 152.15 75.21L154.4 90.07Z" fill="white"/>
      <path d="M221.3 66.34H177.3C178.56 73.26 183.08 78.54 192.51 78.54C196.91 78.54 199.93 77.79 202.06 75.15H220.29C216.27 86.47 205.58 93 192.38 93C173.14 93 160.45 79.42 160.45 61.57C160.45 43.72 173.02 30.01 191.38 30.01C212 30.01 224.45 45.6 221.3 66.34ZM177.67 55.16H204.95C204.07 47.49 199.17 43.97 191.5 43.97C183.45 43.97 179.18 48.87 177.67 55.16Z" fill="white"/>
      <path d="M291.97 31.51V91.36C291.97 109.94 279.25 121.16 261.55 121.16C243.85 121.16 231.75 110.56 230.5 95.6H247.08C247.83 101.96 253.06 106.32 261.54 106.32C269.52 106.32 275.63 101.08 275.63 91.36V83.75C271.02 86.74 265.16 88.49 258.55 88.49C242.09 88.49 228.87 75.15 228.87 59.81C228.87 41.98 242.09 30.01 258.55 30.01C265.16 30.01 271.02 31.76 275.63 34.75V31.51H291.96H291.97ZM275.64 66.92V51.58C271.77 45.97 266.41 44.1 261.05 44.1C251.7 44.1 245.21 50.33 245.21 59.81C245.21 66.79 251.69 74.4 261.05 74.4C266.41 74.4 271.77 72.53 275.64 66.92Z" fill="white"/>
      <path d="M347.22 30.01V46.11C337.61 46.63 330.6 49.49 325.27 55.46V92.99H308.26V31.55H325.27V38.19C330.86 32.86 338 30.01 347.22 30.01Z" fill="white"/>
      <path d="M417.07 31.52V91.49H400.6V88.1C395.95 91.12 390.04 93 383.38 93C366.78 93 353.46 78.92 353.46 61.57C353.46 44.22 366.79 30.01 383.38 30.01C390.04 30.01 395.95 31.9 400.6 34.91V31.52H417.07ZM400.6 71V52.02C396.7 46.49 391.3 44.98 385.89 44.98C376.46 44.98 369.92 52.52 369.92 61.58C369.92 70.64 376.46 78.05 385.89 78.05C391.3 78.05 396.7 76.54 400.6 71.01V71Z" fill="white"/>
      <path d="M87.4 194.95H70.61V148.04L48.76 182.61H38.64V182.49L16.54 147.55L16.79 194.96H0V111.01H11.85L43.7 161.87L75.55 111.01H87.4V194.96V194.95Z" fill="white"/>
      <path d="M164.64 133.55V193.44H148.19V190.05C143.54 193.06 137.64 194.95 130.99 194.95C114.42 194.95 101.11 180.89 101.11 163.56C101.11 146.23 114.42 132.05 130.99 132.05C137.64 132.05 143.54 133.93 148.19 136.95V133.56H164.64V133.55ZM148.19 172.97V154.01C144.3 148.49 138.9 146.98 133.5 146.98C124.08 146.98 117.55 154.51 117.55 163.55C117.55 172.59 124.08 180 133.5 180C138.9 180 144.3 178.49 148.19 172.97Z" fill="white"/>
      <path d="M241.38 133.54V193.33C241.38 211.89 228.67 223.1 210.99 223.1C193.31 223.1 181.22 212.51 179.97 197.56H196.54C197.29 203.91 202.52 208.27 210.99 208.27C218.96 208.27 225.07 203.04 225.07 193.32V185.72C220.46 188.71 214.61 190.45 208 190.45C191.56 190.45 178.35 177.12 178.35 161.8C178.35 143.99 191.55 132.03 208 132.03C214.6 132.03 220.46 133.77 225.07 136.76V133.52H241.39L241.38 133.54ZM225.06 168.92V153.6C221.2 147.99 215.84 146.13 210.48 146.13C201.14 146.13 194.66 152.36 194.66 161.83C194.66 168.81 201.14 176.4 210.48 176.4C215.84 176.4 221.19 174.53 225.06 168.93V168.92Z" fill="white"/>
      <path d="M319.69 161.63V194.95H302.84V162.66C302.84 152.63 297.82 147.35 288.95 147.35C284.32 147.35 279.17 150.05 274.8 155.2V194.95H257.95V133.59H274.8V138.22C279.82 134.23 285.61 132.05 292.55 132.05C308.89 132.05 319.69 143.63 319.69 161.64V161.63Z" fill="white"/>
      <path d="M395.19 133.55V193.44H378.74V190.05C374.09 193.06 368.19 194.95 361.54 194.95C344.97 194.95 331.66 180.89 331.66 163.56C331.66 146.23 344.97 132.05 361.54 132.05C368.19 132.05 374.09 133.93 378.74 136.95V133.56H395.19V133.55ZM378.74 172.97V154.01C374.85 148.49 369.45 146.98 364.05 146.98C354.63 146.98 348.1 154.51 348.1 163.55C348.1 172.59 354.63 180 364.05 180C369.45 180 374.85 178.49 378.74 172.97Z" fill="white"/>
      <path d="M436.24 3.22H428.41V22.09H424.94V3.22H417.11V0H436.24V3.22Z" fill="white"/>
      <path d="M461.74 22.08H458.27V7.69L451.71 18.34H449.53L442.91 7.59L442.97 22.07H439.46V0H441.99L450.59 14.03L459.2 0H461.73V22.08H461.74Z" fill="white"/>
      </svg>`;
      }

      setTimeout(() => {
        // Hide the loader with animation before navigation
        exitloader.classList.add("hide");

        // Navigate to the link after 0.9 seconds
        setTimeout(() => {
          // document.body.classList.remove("lock-scroll"); // Unlock scroll
          // document.documentElement.classList.remove("lock-scroll"); // Unlock scroll for HTML
          window.location.href = href;
        }); // Duration of the slideDown animation
      }, 500); // 5 seconds minus the slideDown animation duration
    }
  });
});

//this is for IOS devices to reload the page when it is loaded from the bfcache
window.addEventListener("pageshow", function (event) {
  if (event.persisted) {
    // Page is loaded from the bfcache, force a reload
    window.location.reload();
  }
});

window.addEventListener("pagehide", function (event) {
  if (event.persisted) {
    // Reset the page state here if necessary
    document.querySelector(".page-loader").style.display = "block";
  }
});

document.addEventListener("visibilitychange", function () {
  if (document.visibilityState === "visible") {
    // The page has become visible again
    document.querySelector(".page-loader").style.display = "block";
  }
});
//--------------------------------------------------------------------

//header links flip

//viewport function
//screenwidth for mobile

if (window.innerWidth > 960) {
  var menuHover = document.querySelectorAll("[data-menu-hover]");
  if (menuHover) {
    // console.log(menuHover);
    menuHover.forEach(function (element) {
      var link = element.querySelector("a");
      if (!link) return; // Skip if there's no link inside this element
      let clone = link.cloneNode(true);
      // Create a new container div to hold both links
      var container = document.createElement("div");
      container.classList.add("link-container");
      element.appendChild(container);
      // Append the original and cloned links to the container
      container.appendChild(link);
      container.appendChild(clone);
      // console.log(element);
      // Add mouseover event listener
      element
        .querySelector(".link-container")
        .addEventListener("mouseover", function () {
          container.querySelectorAll("a").forEach(function (lin) {
            lin.classList.add("hovered");
            gsap.to(lin, { y: "-100%", duration: 0.3, ease: "power1.out" });
          });
        });
      // Add mouseout event listener
      element
        .querySelector(".link-container")
        .addEventListener("mouseout", function () {
          container.querySelectorAll("a").forEach(function (lin) {
            lin.classList.remove("hovered");
            gsap.to(lin, { y: "0", duration: 0.3, ease: "power1.out" });
          });
        });
    });
  }
}
//
